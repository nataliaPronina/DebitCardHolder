{"version":3,"sources":["Order/Order.module.css","Order/Order.js","Success/Success.js","App.js","serviceWorker.js","index.js","App.module.css","Order/card.jpg","Success/Success.module.css"],"names":["module","exports","Order","onSuccess","useState","name","setName","nameError","setNameError","phone","setPhone","phoneError","setPhoneError","agreement","setAgreement","agreementError","setAgreementError","handleSubmit","e","preventDefault","trim","test","Fragment","size","className","styles","cardPreview","cardImage","src","card","alt","items","key","value","hr","onSubmit","data-test-id","type","label","hint","width","onChange","error","text","checked","view","onClick","Success","props","successBlock","App","state","setState","appContainer","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.830e29ae.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardPreview\":\"Order_cardPreview__47B2k\",\"cardImage\":\"Order_cardImage__Q69ii\",\"hr\":\"Order_hr__2LnZk\"};","import React, {useState} from 'react';\nimport Heading from 'arui-feather/heading';\nimport styles from './Order.module.css';\nimport GridRow from 'arui-feather/grid-row';\nimport GridCol from 'arui-feather/grid-col';\nimport card from './card.jpg';\nimport List from 'arui-feather/list';\nimport Paragraph from 'arui-feather/paragraph';\nimport IconCategoryGuard from 'arui-feather/icon/category/category-guard';\nimport Form from 'arui-feather/form';\nimport FormField from 'arui-feather/form-field';\nimport Input from 'arui-feather/input';\nimport CheckBox from 'arui-feather/checkbox';\nimport Button from 'arui-feather/button';\n\nfunction Order({onSuccess}) {\n  const properties = [\n    {key: '1', value: 'До 2% на все покупки'},\n    {key: '2', value: 'До 6% годовых на остаток'},\n  ];\n\n  const [name, setName] = useState('');\n  const [nameError, setNameError] = useState(null);\n  const [phone, setPhone] = useState('');\n  const [phoneError, setPhoneError] = useState(null);\n  const [agreement, setAgreement] = useState(false);\n  const [agreementError, setAgreementError] = useState(null);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (name.trim() === '') {\n      setNameError('Поле обязательно для заполнения');\n      return;\n    }\n\n    if (!/^[- А-Яа-я]+$/.test(name.trim())) {\n      setNameError('Имя и Фамилия указаные неверно. Допустимы только русские буквы, пробелы и дефисы.');\n      return;\n    }\n\n    setNameError(null);\n\n    if (phone.trim() === '') {\n      setPhoneError('Поле обязательно для заполнения');\n      return;\n    }\n\n    if (!/^\\+\\d{11}$/.test(phone.trim())) {\n      setPhoneError('Телефон указан неверно. Должно быть 11 цифр, например, +79012345678.');\n      return;\n    }\n\n    setPhoneError(null);\n\n    if (agreement === false) {\n      setAgreementError(true);\n      return;\n    }\n\n    setAgreementError(null);\n\n    onSuccess();\n  };\n\n  return (\n    <React.Fragment>\n      <Heading size='l'>Заявка на дебетовую карту</Heading>\n      <div className={styles.cardPreview}>\n        <GridRow>\n          <GridCol>\n            <img\n              className={styles.cardImage}\n              src={card}\n              alt='Альфа-Карта Premium'/>\n          </GridCol>\n          <GridCol>\n            <Heading size='m'>Альфа-Карта</Heading>\n            <List items={properties}/>\n          </GridCol>\n        </GridRow>\n      </div>\n      <hr className={styles.hr}/>\n      <Heading size='s'>Персональные данные</Heading>\n      <Paragraph>\n        <IconCategoryGuard size='m' name='category-guard'/>&nbsp;\n        Мы гарантируем безопасность и сохранность ваших данных\n      </Paragraph>\n      <Form onSubmit={handleSubmit}>\n        <FormField>\n          <Input\n            data-test-id='name'\n            name='name'\n            type='text'\n            label='Фамилия и имя'\n            hint='Укажите точно как в паспорте'\n            width='available'\n            value={name}\n            onChange={setName}\n            error={nameError}\n          />\n        </FormField>\n        <FormField>\n          <Input\n            data-test-id='phone'\n            name='phone'\n            type='tel'\n            label='Мобильный телефон'\n            hint='На указанный номер моб. тел. будет отправлен смс-код для подтверждения заявки на карту. Проверьте, что номер ваш и введен корректно.'\n            width='available'\n            value={phone}\n            onChange={setPhone}\n            error={phoneError}\n          />\n        </FormField>\n        <FormField>\n          <CheckBox\n            data-test-id='agreement'\n            name='agreement'\n            text='Я соглашаюсь с условиями обработки и использования моих персональных данных и разрешаю сделать запрос в бюро кредитных историй'\n            className={agreementError && 'input_invalid'}\n            checked={agreement}\n            onChange={setAgreement}\n          />\n        </FormField>\n        <FormField>\n          <Button view='extra' onClick={handleSubmit}>Продолжить</Button>\n        </FormField>\n      </Form>\n    </React.Fragment>\n  );\n}\n\nexport default Order;\n","import React from 'react';\nimport Heading from 'arui-feather/heading';\nimport styles from './Success.module.css';\nimport Paragraph from 'arui-feather/paragraph';\nimport IconOk from 'arui-feather/icon/ui/ok';\n\nfunction Success(props) {\n  return (\n    <React.Fragment>\n      <Heading size='l'>Заявка на дебетовую карту</Heading>\n      <div className={styles.successBlock}>\n        <Paragraph data-test-id='order-success'>\n          <IconOk size='m' name='ok'/>&nbsp;\n          Ваша заявка успешно отправлена! Наш менеджер свяжется с вами в ближайшее время.\n        </Paragraph>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default Success;\n","import React, {useState} from 'react';\nimport styles from './App.module.css';\nimport Order from './Order/Order';\nimport Success from './Success/Success';\n\nfunction App() {\n  const [state, setState] = useState('order');\n\n  const handleSuccess = () => {\n    setState('success');\n  };\n\n  return (\n    <div className={styles.appContainer}>\n      {state === 'order' && <Order onSuccess={handleSuccess} />}\n      {state === 'success' && <Success/>}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appContainer\":\"App_appContainer__3jRx1\"};","module.exports = __webpack_public_path__ + \"static/media/card.fa350215.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"successBlock\":\"Success_successBlock__2L3Cw\"};"],"sourceRoot":""}